[1/14] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\adam\Desktop\Emb\LearningESP32\IDF\working_with_ota\client_2_esp_ota_update_secured\build\esp-idf\main && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.4.1-2/components/spiffs/spiffsgen.py 0x80000 C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/storage C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/storage.bin --page-size=256 --obj-name-len=32 --meta-len=4 --use-magic --use-magic-len"
[2/14] Generating ../../signature_verification_key.bin
espsecure.py v4.8.1
C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/signature_key.pem public key extracted to C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/signature_verification_key.bin
[3/14] Generating ../../signature_verification_key.bin.S
[4/14] Building ASM object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/__/__/signature_verification_key.bin.S.obj
[5/14] Linking C static library esp-idf\bootloader_support\libbootloader_support.a
[6/14] Performing build step for 'bootloader'
[1/8] Generating signature_verification_key.bin
espsecure.py v4.8.1
C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/signature_key.pem public key extracted to C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/bootloader/esp-idf/bootloader_support/signature_verification_key.bin
[2/8] Generating ../../signature_verification_key.bin.S
[3/8] Building ASM object esp-idf/bootloader_support/CMakeFiles/__idf_bootloader_support.dir/__/__/signature_verification_key.bin.S.obj
[4/8] Linking C static library esp-idf\bootloader_support\libbootloader_support.a
[5/8] Linking C executable bootloader.elf
==============================================================================
Bootloader built and secure digest generated.
Secure boot enabled, so bootloader not flashed automatically.
Burn secure boot key to efuse using:
	C:/Espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe C:/Espressif/frameworks/esp-idf-v5.4.1-2/components/esptool_py/esptool/espefuse.py burn_key secure_boot_v1 C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/bootloader/secure-bootloader-key-256.bin
First time flash command is:
	C:/Espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe  C:/Espressif/frameworks/esp-idf-v5.4.1-2/components/esptool_py/esptool/esptool.py --chip esp32 --port=(PORT) --baud=(BAUD) --before=default_reset --after=no_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x1000 C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/bootloader/bootloader.bin
==============================================================================
To reflash the bootloader after initial flash:
	C:/Espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe  C:/Espressif/frameworks/esp-idf-v5.4.1-2/components/esptool_py/esptool/esptool.py --chip esp32 --port=(PORT) --baud=(BAUD) --before=default_reset --after=no_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x0 C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/bootloader/bootloader-reflash-digest.bin
==============================================================================
* After first boot, only re-flashes of this kind (with same key) will be accepted.
* Not recommended to reuse the same secure boot keyfile on multiple production devices.
[6/8] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/bootloader/bootloader.bin
[7/8] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\adam\Desktop\Emb\LearningESP32\IDF\working_with_ota\client_2_esp_ota_update_secured\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.4.1-2/components/partition_table/check_sizes.py --offset 0xe000 bootloader 0x1000 C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/bootloader/bootloader.bin"
Bootloader binary size 0x98d0 bytes. 0x3730 bytes (27%) free.
[8/8] Generating bootloader-reflash-digest.bin
DIGEST C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/bootloader/bootloader-reflash-digest.bin
espsecure.py v4.8.1
Using 256-bit key
digest+image written to C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/bootloader/bootloader-reflash-digest.bin
[7/14] No install step for 'bootloader'
[8/14] Completed 'bootloader'
[9/14] Generating ld/sections.ld
[10/14] Linking CXX executable securedOTA.elf
[11/14] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/securedOTA-unsigned.bin
[12/14] Generating signed binary image
espsecure.py v4.8.1
Signed 982960 bytes of data from C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/securedOTA-unsigned.bin
Generated signed binary image C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/securedOTA.bin from C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/securedOTA-unsigned.bin
[13/14] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Users\adam\Desktop\Emb\LearningESP32\IDF\working_with_ota\client_2_esp_ota_update_secured\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.4_py3.11_env\Scripts\python.exe C:/Espressif/frameworks/esp-idf-v5.4.1-2/components/partition_table/check_sizes.py --offset 0xe000 partition --type app C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/partition_table/partition-table.bin C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build/securedOTA.bin"
securedOTA.bin binary size 0xefff4 bytes. Smallest app partition is 0x100000 bytes. 0x1000c bytes (6%) free.
[13/14] C:\WINDOWS\system32\cmd.exe /C "cd /D C:\Espressif\frameworks\esp-idf-v5.4.1-2\components\esptool_py && C:\Espressif\tools\cmake\3.30.2\bin\cmake.exe -D IDF_PATH=C:/Espressif/frameworks/esp-idf-v5.4.1-2 -D SERIAL_TOOL=C:/Espressif/python_env/idf5.4_py3.11_env/Scripts/python.exe;;C:/Espressif/frameworks/esp-idf-v5.4.1-2/components/esptool_py/esptool/esptool.py;--chip;esp32 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=no_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/adam/Desktop/Emb/LearningESP32/IDF/working_with_ota/client_2_esp_ota_update_secured/build -P C:/Espressif/frameworks/esp-idf-v5.4.1-2/components/esptool_py/run_serial_tool.cmake"
esptool.py --chip esp32 -p COM12 -b 460800 --before=default_reset --after=no_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 4MB 0x20000 securedOTA.bin 0xe000 partition_table/partition-table.bin 0x19000 ota_data_initial.bin 0x320000 storage.bin
esptool.py v4.8.1
Serial port COM12
Connecting......
Chip is ESP32-D0WD-V3 (revision v3.1)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: f4:65:0b:54:ff:30
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00020000 to 0x0010ffff...
Flash will be erased from 0x0000e000 to 0x0000efff...
Flash will be erased from 0x00019000 to 0x0001afff...
Flash will be erased from 0x00320000 to 0x0039ffff...
Compressed 983028 bytes to 607823...
Writing at 0x00020000... (2 %)
Writing at 0x0002cb93... (5 %)
Writing at 0x00038321... (7 %)
Writing at 0x00041ac4... (10 %)
Writing at 0x00049fc2... (13 %)
Writing at 0x0004f8d9... (15 %)
Writing at 0x0005539d... (18 %)
Writing at 0x0005b2fb... (21 %)
Writing at 0x00060e59... (23 %)
Writing at 0x00066a07... (26 %)
Writing at 0x0006c7d7... (28 %)
Writing at 0x00072f1d... (31 %)
Writing at 0x00078e79... (34 %)
Writing at 0x0007e862... (36 %)
Writing at 0x00083a17... (39 %)
Writing at 0x00088e90... (42 %)
Writing at 0x0008e5d3... (44 %)
Writing at 0x00093df9... (47 %)
Writing at 0x0009904b... (50 %)
Writing at 0x0009e7ba... (52 %)
Writing at 0x000a4728... (55 %)
Writing at 0x000aa0ec... (57 %)
Writing at 0x000afcc9... (60 %)
Writing at 0x000b5949... (63 %)
Writing at 0x000bb5ca... (65 %)
Writing at 0x000c0db4... (68 %)
Writing at 0x000c6af5... (71 %)
Writing at 0x000cce6c... (73 %)
Writing at 0x000d2989... (76 %)
Writing at 0x000d84ed... (78 %)
Writing at 0x000de217... (81 %)
Writing at 0x000e3965... (84 %)
Writing at 0x000ea159... (86 %)
Writing at 0x000f3b04... (89 %)
Writing at 0x000fade7... (92 %)
Writing at 0x00100d65... (94 %)
Writing at 0x00106b4f... (97 %)
Writing at 0x0010bfbb... (100 %)
Wrote 983028 bytes (607823 compressed) at 0x00020000 in 16.8 seconds (effective 467.1 kbit/s)...
Hash of data verified.
Compressed 3140 bytes to 225...
Writing at 0x0000e000... (100 %)
Wrote 3140 bytes (225 compressed) at 0x0000e000 in 0.1 seconds (effective 236.0 kbit/s)...
Hash of data verified.
Compressed 8192 bytes to 31...
Writing at 0x00019000... (100 %)
Wrote 8192 bytes (31 compressed) at 0x00019000 in 0.1 seconds (effective 641.3 kbit/s)...
Hash of data verified.
Compressed 524288 bytes to 5162...
Writing at 0x00320000... (100 %)
Wrote 524288 bytes (5162 compressed) at 0x00320000 in 2.7 seconds (effective 1560.0 kbit/s)...
Hash of data verified.

Leaving...
Staying in bootloader.
